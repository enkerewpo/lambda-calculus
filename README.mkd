# A Formalization of Typed and Untyped λ-Calculus in SSReflect-Coq and Agda2

By Kazuhiko Sakaguchi, Nov. 2011 - July 2014.

This is a formalization of the λ-calculus written in SSReflect-Coq and Agda2, and it contains the following definitions and theorems:

* SKI combinator calculus: coq/CL.v
    * Confluence of weak reduction
* Untyped lambda calculus: coq/LC/Debruijn/Untyped.v
    * Confluence of beta reduction
* STLC (simply typed lambda calculus): coq/LC/Debruijn/STLC.v
    * Subject reduction (type preservation) theorem
    * Strong normalization theorem
        * Using a type-free version of the reducibility predicate
        * Using a typed version of the reducibility predicate (depends on a part of the subject reduction proof)
* System F (second order typed lambda calculus): coq/LC/Debruijn/F.v
    * Subject reduction (type preservation) theorem
    * Strong normalization theorem
        * Using a type-free version of the reducibility candidates

## References

* N.G. de Bruijn. Lambda Calculus Notation with Nameless Dummies: A Tool for Automatic Formula Manipulation, with Application to the Church-Rosser Theorem. Indagationes Mathematicae, 75(5), 381–392, 1972.
* J.H. Gallier. On Girard's “Candidats de Réductibilité". In Logic and Computer Science. P. Odifreddi, Editor, Academic Press, 123-203, 1989.
* J.-Y. Girard. Proofs and Types. Cambridge University Press, 1989.
* J.R. Hindley and J.P. Seldin. Lambda-Calculus and Combinators: an Introduction. Cambridge University Press, 2008. 3rd edition.
* T. Nipkow. More Church–Rosser Proofs (in Isabelle/HOL). Journal of Automated Reasoning, 26(1), 51–66, 2001.
* M. Takahashi. Parallel Reductions in λ-Calculus. Information and Computation, 118(1), 120-127, 1995.
